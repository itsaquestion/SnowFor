% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/snowFor.R
\name{snowFor}
\alias{snowFor}
\title{snowFor multithreading map-like function based on snow and foreach}
\usage{
snowFor(x, FUN, pre_fun = NULL, varlist = NULL,
  cores = parallel::detectCores(), env = globalenv(), er = NULL,
  er_key = "SnowFor")
}
\arguments{
\item{x}{list to loop}

\item{FUN}{the function for mapping}

\item{pre_fun}{prepare function to init all nodes}

\item{varlist}{name string vector of objects to be exported to nodes: "a_variable"}

\item{cores}{number of threads}

\item{env}{env to store the cl object. defalut: globalenv()}

\item{er}{an EasyRedis object. (eg: er = EasyRedis::ErInit())}

\item{er_key}{redis key to store info}
}
\description{
Errors won't break the loop.
Instead the loop will return an ThreadError object and keep going.
}
\examples{
go_fun = function(x){
  Sys.sleep(1)
  x
 }
a = snowFor(1:10,go_fun,cores = 2)


}
